{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["let currentPlayer: \"X\" | \"O\" = \"X\"; // Track the current player\r\n\r\n// Select all cells\r\nlet cells = document.querySelectorAll(\".items\");\r\n\r\n// Select player headline elements\r\nlet playerX = document.querySelector(\".playerX\") as HTMLElement;\r\nlet playerO = document.querySelector(\".playerO\") as HTMLElement;\r\n\r\n// Function to update the current player display\r\nfunction updatePlayerDisplay() {\r\n  if (currentPlayer === \"X\") {\r\n    playerX.style.fontWeight = \"bold\";\r\n    playerX.style.fontSize = \"2rem\";\r\n    playerO.style.fontWeight = \"normal\";\r\n    playerO.style.fontSize = \"1rem\";\r\n  } else {\r\n    playerO.style.fontWeight = \"bold\";\r\n    playerO.style.fontSize = \"2rem\";\r\n    playerX.style.fontWeight = \"normal\";\r\n    playerX.style.fontSize = \"1rem\";\r\n  }\r\n}\r\n\r\n// Add event listeners to each cell\r\ncells.forEach((cell) => {\r\n  cell.addEventListener(\"click\", function (event) {\r\n    let button = event.target as HTMLButtonElement; // Ensure it's treated as a button\r\n\r\n    if (!button.textContent) {\r\n      // Check if the cell is empty\r\n      button.textContent = currentPlayer; // Set the mark\r\n      currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\"; // Switch player\r\n      updatePlayerDisplay(); // Update the UI\r\n    }\r\n  });\r\n});\r\n\r\n// Initialize the display\r\nupdatePlayerDisplay();\r\n"],
  "mappings": "AAAA,IAAI,gBAA2B;AAG/B,IAAI,QAAQ,SAAS,iBAAiB,QAAQ;AAG9C,IAAI,UAAU,SAAS,cAAc,UAAU;AAC/C,IAAI,UAAU,SAAS,cAAc,UAAU;AAG/C,SAAS,sBAAsB;AAC7B,MAAI,kBAAkB,KAAK;AACzB,YAAQ,MAAM,aAAa;AAC3B,YAAQ,MAAM,WAAW;AACzB,YAAQ,MAAM,aAAa;AAC3B,YAAQ,MAAM,WAAW;AAAA,EAC3B,OAAO;AACL,YAAQ,MAAM,aAAa;AAC3B,YAAQ,MAAM,WAAW;AACzB,YAAQ,MAAM,aAAa;AAC3B,YAAQ,MAAM,WAAW;AAAA,EAC3B;AACF;AAGA,MAAM,QAAQ,CAAC,SAAS;AACtB,OAAK,iBAAiB,SAAS,SAAU,OAAO;AAC9C,QAAI,SAAS,MAAM;AAEnB,QAAI,CAAC,OAAO,aAAa;AAEvB,aAAO,cAAc;AACrB,sBAAgB,kBAAkB,MAAM,MAAM;AAC9C,0BAAoB;AAAA,IACtB;AAAA,EACF,CAAC;AACH,CAAC;AAGD,oBAAoB;",
  "names": []
}
